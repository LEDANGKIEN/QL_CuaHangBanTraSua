<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DSQLTRASUAConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DSQLTRASUAConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DAL.Properties.Settings.GlobalReference.Default.DSQLTRASUAConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountDTableAdapter" GeneratorDataComponentClassName="AccountDTableAdapter" Name="AccountD" UserDataComponentName="AccountDTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DSQLTRASUAConnectionString (Settings)" DbObjectName="DSQLTRASUA.dbo.AccountD" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AccountD] WHERE (([userName] = @Original_userName) AND ([displayName] = @Original_displayName) AND ((@IsNull_password = 1 AND [password] IS NULL) OR ([password] = @Original_password)) AND ([idTypeAccount] = @Original_idTypeAccount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_displayName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="displayName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AccountD] ([userName], [displayName], [password], [idTypeAccount]) VALUES (@userName, @displayName, @password, @idTypeAccount);
SELECT userName, displayName, password, idTypeAccount FROM AccountD WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@displayName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="displayName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userName, displayName, password, idTypeAccount FROM dbo.AccountD</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AccountD] SET [userName] = @userName, [displayName] = @displayName, [password] = @password, [idTypeAccount] = @idTypeAccount WHERE (([userName] = @Original_userName) AND ([displayName] = @Original_displayName) AND ((@IsNull_password = 1 AND [password] IS NULL) OR ([password] = @Original_password)) AND ([idTypeAccount] = @Original_idTypeAccount));
SELECT userName, displayName, password, idTypeAccount FROM AccountD WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@displayName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="displayName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_displayName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="displayName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="displayName" DataSetColumn="displayName" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="idTypeAccount" DataSetColumn="idTypeAccount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeAccountTableAdapter" GeneratorDataComponentClassName="TypeAccountTableAdapter" Name="TypeAccount" UserDataComponentName="TypeAccountTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DSQLTRASUAConnectionString (Settings)" DbObjectName="DSQLTRASUA.dbo.TypeAccount" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeAccount] WHERE (([idTypeAccount] = @Original_idTypeAccount) AND ([nameTypeAccount] = @Original_nameTypeAccount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nameTypeAccount" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeAccount] ([nameTypeAccount]) VALUES (@nameTypeAccount);
SELECT idTypeAccount, nameTypeAccount FROM TypeAccount WHERE (idTypeAccount = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nameTypeAccount" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameTypeAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idTypeAccount, nameTypeAccount FROM dbo.TypeAccount</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeAccount] SET [nameTypeAccount] = @nameTypeAccount WHERE (([idTypeAccount] = @Original_idTypeAccount) AND ([nameTypeAccount] = @Original_nameTypeAccount));
SELECT idTypeAccount, nameTypeAccount FROM TypeAccount WHERE (idTypeAccount = @idTypeAccount)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@nameTypeAccount" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameTypeAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_nameTypeAccount" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="nameTypeAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idTypeAccount" ColumnName="idTypeAccount" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idTypeAccount" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idTypeAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idTypeAccount" DataSetColumn="idTypeAccount" />
              <Mapping SourceColumn="nameTypeAccount" DataSetColumn="nameTypeAccount" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AccountD" msprop:Generator_TableClassName="AccountDDataTable" msprop:Generator_TableVarName="tableAccountD" msprop:Generator_TablePropName="AccountD" msprop:Generator_RowDeletingName="AccountDRowDeleting" msprop:Generator_RowChangingName="AccountDRowChanging" msprop:Generator_RowEvHandlerName="AccountDRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountDRowDeleted" msprop:Generator_UserTableName="AccountD" msprop:Generator_RowChangedName="AccountDRowChanged" msprop:Generator_RowEvArgName="AccountDRowChangeEvent" msprop:Generator_RowClassName="AccountDRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userName" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="displayName" msprop:Generator_ColumnVarNameInTable="columndisplayName" msprop:Generator_ColumnPropNameInRow="displayName" msprop:Generator_ColumnPropNameInTable="displayNameColumn" msprop:Generator_UserColumnName="displayName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idTypeAccount" msprop:Generator_ColumnVarNameInTable="columnidTypeAccount" msprop:Generator_ColumnPropNameInRow="idTypeAccount" msprop:Generator_ColumnPropNameInTable="idTypeAccountColumn" msprop:Generator_UserColumnName="idTypeAccount" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeAccount" msprop:Generator_TableClassName="TypeAccountDataTable" msprop:Generator_TableVarName="tableTypeAccount" msprop:Generator_TablePropName="TypeAccount" msprop:Generator_RowDeletingName="TypeAccountRowDeleting" msprop:Generator_RowChangingName="TypeAccountRowChanging" msprop:Generator_RowEvHandlerName="TypeAccountRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeAccountRowDeleted" msprop:Generator_UserTableName="TypeAccount" msprop:Generator_RowChangedName="TypeAccountRowChanged" msprop:Generator_RowEvArgName="TypeAccountRowChangeEvent" msprop:Generator_RowClassName="TypeAccountRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idTypeAccount" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidTypeAccount" msprop:Generator_ColumnPropNameInRow="idTypeAccount" msprop:Generator_ColumnPropNameInTable="idTypeAccountColumn" msprop:Generator_UserColumnName="idTypeAccount" type="xs:int" />
              <xs:element name="nameTypeAccount" msprop:Generator_ColumnVarNameInTable="columnnameTypeAccount" msprop:Generator_ColumnPropNameInRow="nameTypeAccount" msprop:Generator_ColumnPropNameInTable="nameTypeAccountColumn" msprop:Generator_UserColumnName="nameTypeAccount">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccountD" />
      <xs:field xpath="mstns:userName" />
    </xs:unique>
    <xs:unique name="TypeAccount_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeAccount" />
      <xs:field xpath="mstns:idTypeAccount" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__AccountD__idType__47DBAE45" msdata:parent="TypeAccount" msdata:child="AccountD" msdata:parentkey="idTypeAccount" msdata:childkey="idTypeAccount" msprop:Generator_UserChildTable="AccountD" msprop:Generator_ChildPropName="GetAccountDRows" msprop:Generator_UserRelationName="FK__AccountD__idType__47DBAE45" msprop:Generator_RelationVarName="relationFK__AccountD__idType__47DBAE45" msprop:Generator_UserParentTable="TypeAccount" msprop:Generator_ParentPropName="TypeAccountRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>