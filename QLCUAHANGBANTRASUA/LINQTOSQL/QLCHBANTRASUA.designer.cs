#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQTOSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSQLTRASUA")]
	public partial class QLCHBANTRASUADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccountD(AccountD instance);
    partial void UpdateAccountD(AccountD instance);
    partial void DeleteAccountD(AccountD instance);
    partial void InsertTypeAccount(TypeAccount instance);
    partial void UpdateTypeAccount(TypeAccount instance);
    partial void DeleteTypeAccount(TypeAccount instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertBillInfo(BillInfo instance);
    partial void UpdateBillInfo(BillInfo instance);
    partial void DeleteBillInfo(BillInfo instance);
    partial void InsertCategoriesD(CategoriesD instance);
    partial void UpdateCategoriesD(CategoriesD instance);
    partial void DeleteCategoriesD(CategoriesD instance);
    partial void InsertcateNhanvien(cateNhanvien instance);
    partial void UpdatecateNhanvien(cateNhanvien instance);
    partial void DeletecateNhanvien(cateNhanvien instance);
    partial void InsertDrink(Drink instance);
    partial void UpdateDrink(Drink instance);
    partial void DeleteDrink(Drink instance);
    partial void InsertNgayLuong(NgayLuong instance);
    partial void UpdateNgayLuong(NgayLuong instance);
    partial void DeleteNgayLuong(NgayLuong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSizeDrink(SizeDrink instance);
    partial void UpdateSizeDrink(SizeDrink instance);
    partial void DeleteSizeDrink(SizeDrink instance);
    partial void InsertTableD(TableD instance);
    partial void UpdateTableD(TableD instance);
    partial void DeleteTableD(TableD instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    #endregion
		
		public QLCHBANTRASUADataContext() : 
				base(global::LINQTOSQL.Properties.Settings.Default.DSQLTRASUAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHBANTRASUADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHBANTRASUADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHBANTRASUADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHBANTRASUADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        
		
		public System.Data.Linq.Table<AccountD> AccountDs
		{
			get
			{
				return this.GetTable<AccountD>();
			}
		}
		
		public System.Data.Linq.Table<TypeAccount> TypeAccounts
		{
			get
			{
				return this.GetTable<TypeAccount>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<BillInfo> BillInfos
		{
			get
			{
				return this.GetTable<BillInfo>();
			}
		}
		
		public System.Data.Linq.Table<CategoriesD> CategoriesDs
		{
			get
			{
				return this.GetTable<CategoriesD>();
			}
		}
		
		public System.Data.Linq.Table<cateNhanvien> cateNhanviens
		{
			get
			{
				return this.GetTable<cateNhanvien>();
			}
		}
		
		public System.Data.Linq.Table<Drink> Drinks
		{
			get
			{
				return this.GetTable<Drink>();
			}
		}
		
		public System.Data.Linq.Table<NgayLuong> NgayLuongs
		{
			get
			{
				return this.GetTable<NgayLuong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<SizeDrink> SizeDrinks
		{
			get
			{
				return this.GetTable<SizeDrink>();
			}
		}
		
		public System.Data.Linq.Table<TableD> TableDs
		{
			get
			{
				return this.GetTable<TableD>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_AddAccountByUserName")]
		public int USP_AddAccountByUserName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idTypeAccount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, displayName, idTypeAccount, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_CheckLogin")]
		public ISingleResult<USP_CheckLoginResult> USP_CheckLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string useName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), useName, password);
			return ((ISingleResult<USP_CheckLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateAccountByUserName")]
		public int USP_UpdateAccountByUserName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idTypeAccount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, displayName, idTypeAccount, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateAccountByUserNameNoPass")]
		public int USP_UpdateAccountByUserNameNoPass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idTypeAccount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, displayName, idTypeAccount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateAccountByUserNameNoType")]
		public int USP_UpdateAccountByUserNameNoType([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, displayName, password);
			return ((int)(result.ReturnValue));
		}

        public void Fill(DataTable dt)
        {
            throw new NotImplementedException();
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountD")]
	public partial class AccountD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userName;
		
		private string _displayName;
		
		private string _password;
		
		private int _idTypeAccount;
		
		private EntityRef<TypeAccount> _TypeAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnidTypeAccountChanging(int value);
    partial void OnidTypeAccountChanged();
    #endregion
		
		public AccountD()
		{
			this._TypeAccount = default(EntityRef<TypeAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeAccount", DbType="Int NOT NULL")]
		public int idTypeAccount
		{
			get
			{
				return this._idTypeAccount;
			}
			set
			{
				if ((this._idTypeAccount != value))
				{
					if (this._TypeAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeAccountChanging(value);
					this.SendPropertyChanging();
					this._idTypeAccount = value;
					this.SendPropertyChanged("idTypeAccount");
					this.OnidTypeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAccount_AccountD", Storage="_TypeAccount", ThisKey="idTypeAccount", OtherKey="idTypeAccount", IsForeignKey=true)]
		public TypeAccount TypeAccount
		{
			get
			{
				return this._TypeAccount.Entity;
			}
			set
			{
				TypeAccount previousValue = this._TypeAccount.Entity;
				if (((previousValue != value) 
							|| (this._TypeAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeAccount.Entity = null;
						previousValue.AccountDs.Remove(this);
					}
					this._TypeAccount.Entity = value;
					if ((value != null))
					{
						value.AccountDs.Add(this);
						this._idTypeAccount = value.idTypeAccount;
					}
					else
					{
						this._idTypeAccount = default(int);
					}
					this.SendPropertyChanged("TypeAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public object pPass { get; set; }

        public object pUser { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeAccount")]
	public partial class TypeAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTypeAccount;
		
		private string _nameTypeAccount;
		
		private EntitySet<AccountD> _AccountDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTypeAccountChanging(int value);
    partial void OnidTypeAccountChanged();
    partial void OnnameTypeAccountChanging(string value);
    partial void OnnameTypeAccountChanged();
    #endregion
		
		public TypeAccount()
		{
			this._AccountDs = new EntitySet<AccountD>(new Action<AccountD>(this.attach_AccountDs), new Action<AccountD>(this.detach_AccountDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeAccount", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTypeAccount
		{
			get
			{
				return this._idTypeAccount;
			}
			set
			{
				if ((this._idTypeAccount != value))
				{
					this.OnidTypeAccountChanging(value);
					this.SendPropertyChanging();
					this._idTypeAccount = value;
					this.SendPropertyChanged("idTypeAccount");
					this.OnidTypeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTypeAccount", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nameTypeAccount
		{
			get
			{
				return this._nameTypeAccount;
			}
			set
			{
				if ((this._nameTypeAccount != value))
				{
					this.OnnameTypeAccountChanging(value);
					this.SendPropertyChanging();
					this._nameTypeAccount = value;
					this.SendPropertyChanged("nameTypeAccount");
					this.OnnameTypeAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeAccount_AccountD", Storage="_AccountDs", ThisKey="idTypeAccount", OtherKey="idTypeAccount")]
		public EntitySet<AccountD> AccountDs
		{
			get
			{
				return this._AccountDs;
			}
			set
			{
				this._AccountDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountDs(AccountD entity)
		{
			this.SendPropertyChanging();
			entity.TypeAccount = this;
		}
		
		private void detach_AccountDs(AccountD entity)
		{
			this.SendPropertyChanging();
			entity.TypeAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBill;
		
		private int _idTableD;
		
		private int _nmPeople;
		
		private System.DateTime _getIn;
		
		private System.Nullable<System.DateTime> _getOut;
		
		private int _statusBill;
		
		private double _sale;
		
		private double _totalPrice;
		
		private string _MaBill;
		
		private EntitySet<BillInfo> _BillInfos;
		
		private EntityRef<TableD> _TableD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBillChanging(int value);
    partial void OnidBillChanged();
    partial void OnidTableDChanging(int value);
    partial void OnidTableDChanged();
    partial void OnnmPeopleChanging(int value);
    partial void OnnmPeopleChanged();
    partial void OngetInChanging(System.DateTime value);
    partial void OngetInChanged();
    partial void OngetOutChanging(System.Nullable<System.DateTime> value);
    partial void OngetOutChanged();
    partial void OnstatusBillChanging(int value);
    partial void OnstatusBillChanged();
    partial void OnsaleChanging(double value);
    partial void OnsaleChanged();
    partial void OntotalPriceChanging(double value);
    partial void OntotalPriceChanged();
    partial void OnMaBillChanging(string value);
    partial void OnMaBillChanged();
    #endregion
		
		public Bill()
		{
			this._BillInfos = new EntitySet<BillInfo>(new Action<BillInfo>(this.attach_BillInfos), new Action<BillInfo>(this.detach_BillInfos));
			this._TableD = default(EntityRef<TableD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBill", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idBill
		{
			get
			{
				return this._idBill;
			}
			set
			{
				if ((this._idBill != value))
				{
					this.OnidBillChanging(value);
					this.SendPropertyChanging();
					this._idBill = value;
					this.SendPropertyChanged("idBill");
					this.OnidBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTableD", DbType="Int NOT NULL")]
		public int idTableD
		{
			get
			{
				return this._idTableD;
			}
			set
			{
				if ((this._idTableD != value))
				{
					if (this._TableD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTableDChanging(value);
					this.SendPropertyChanging();
					this._idTableD = value;
					this.SendPropertyChanged("idTableD");
					this.OnidTableDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nmPeople", DbType="Int NOT NULL")]
		public int nmPeople
		{
			get
			{
				return this._nmPeople;
			}
			set
			{
				if ((this._nmPeople != value))
				{
					this.OnnmPeopleChanging(value);
					this.SendPropertyChanging();
					this._nmPeople = value;
					this.SendPropertyChanged("nmPeople");
					this.OnnmPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_getIn", DbType="DateTime NOT NULL")]
		public System.DateTime getIn
		{
			get
			{
				return this._getIn;
			}
			set
			{
				if ((this._getIn != value))
				{
					this.OngetInChanging(value);
					this.SendPropertyChanging();
					this._getIn = value;
					this.SendPropertyChanged("getIn");
					this.OngetInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_getOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> getOut
		{
			get
			{
				return this._getOut;
			}
			set
			{
				if ((this._getOut != value))
				{
					this.OngetOutChanging(value);
					this.SendPropertyChanging();
					this._getOut = value;
					this.SendPropertyChanged("getOut");
					this.OngetOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusBill", DbType="Int NOT NULL")]
		public int statusBill
		{
			get
			{
				return this._statusBill;
			}
			set
			{
				if ((this._statusBill != value))
				{
					this.OnstatusBillChanging(value);
					this.SendPropertyChanging();
					this._statusBill = value;
					this.SendPropertyChanged("statusBill");
					this.OnstatusBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale", DbType="Float NOT NULL")]
		public double sale
		{
			get
			{
				return this._sale;
			}
			set
			{
				if ((this._sale != value))
				{
					this.OnsaleChanging(value);
					this.SendPropertyChanging();
					this._sale = value;
					this.SendPropertyChanged("sale");
					this.OnsaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Float NOT NULL")]
		public double totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBill", AutoSync=AutoSync.Always, DbType="NVarChar(24) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaBill
		{
			get
			{
				return this._MaBill;
			}
			set
			{
				if ((this._MaBill != value))
				{
					this.OnMaBillChanging(value);
					this.SendPropertyChanging();
					this._MaBill = value;
					this.SendPropertyChanged("MaBill");
					this.OnMaBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillInfo", Storage="_BillInfos", ThisKey="idBill", OtherKey="idBill")]
		public EntitySet<BillInfo> BillInfos
		{
			get
			{
				return this._BillInfos;
			}
			set
			{
				this._BillInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableD_Bill", Storage="_TableD", ThisKey="idTableD", OtherKey="idTableD", IsForeignKey=true)]
		public TableD TableD
		{
			get
			{
				return this._TableD.Entity;
			}
			set
			{
				TableD previousValue = this._TableD.Entity;
				if (((previousValue != value) 
							|| (this._TableD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TableD.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._TableD.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._idTableD = value.idTableD;
					}
					else
					{
						this._idTableD = default(int);
					}
					this.SendPropertyChanged("TableD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillInfos(BillInfo entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_BillInfos(BillInfo entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillInfo")]
	public partial class BillInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBillInfo;
		
		private int _idBill;
		
		private int _idDrink;
		
		private int _countD;
		
		private double _price;
		
		private string _MaBill;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Drink> _Drink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBillInfoChanging(int value);
    partial void OnidBillInfoChanged();
    partial void OnidBillChanging(int value);
    partial void OnidBillChanged();
    partial void OnidDrinkChanging(int value);
    partial void OnidDrinkChanged();
    partial void OncountDChanging(int value);
    partial void OncountDChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnMaBillChanging(string value);
    partial void OnMaBillChanged();
    #endregion
		
		public BillInfo()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Drink = default(EntityRef<Drink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBillInfo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idBillInfo
		{
			get
			{
				return this._idBillInfo;
			}
			set
			{
				if ((this._idBillInfo != value))
				{
					this.OnidBillInfoChanging(value);
					this.SendPropertyChanging();
					this._idBillInfo = value;
					this.SendPropertyChanged("idBillInfo");
					this.OnidBillInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBill", DbType="Int NOT NULL")]
		public int idBill
		{
			get
			{
				return this._idBill;
			}
			set
			{
				if ((this._idBill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBillChanging(value);
					this.SendPropertyChanging();
					this._idBill = value;
					this.SendPropertyChanged("idBill");
					this.OnidBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDrink", DbType="Int NOT NULL")]
		public int idDrink
		{
			get
			{
				return this._idDrink;
			}
			set
			{
				if ((this._idDrink != value))
				{
					if (this._Drink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDrinkChanging(value);
					this.SendPropertyChanging();
					this._idDrink = value;
					this.SendPropertyChanged("idDrink");
					this.OnidDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countD", DbType="Int NOT NULL")]
		public int countD
		{
			get
			{
				return this._countD;
			}
			set
			{
				if ((this._countD != value))
				{
					this.OncountDChanging(value);
					this.SendPropertyChanging();
					this._countD = value;
					this.SendPropertyChanged("countD");
					this.OncountDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBill", AutoSync=AutoSync.Always, DbType="NVarChar(24) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaBill
		{
			get
			{
				return this._MaBill;
			}
			set
			{
				if ((this._MaBill != value))
				{
					this.OnMaBillChanging(value);
					this.SendPropertyChanging();
					this._MaBill = value;
					this.SendPropertyChanged("MaBill");
					this.OnMaBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_BillInfo", Storage="_Bill", ThisKey="idBill", OtherKey="idBill", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.BillInfos.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.BillInfos.Add(this);
						this._idBill = value.idBill;
					}
					else
					{
						this._idBill = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_BillInfo", Storage="_Drink", ThisKey="idDrink", OtherKey="idDrink", IsForeignKey=true)]
		public Drink Drink
		{
			get
			{
				return this._Drink.Entity;
			}
			set
			{
				Drink previousValue = this._Drink.Entity;
				if (((previousValue != value) 
							|| (this._Drink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drink.Entity = null;
						previousValue.BillInfos.Remove(this);
					}
					this._Drink.Entity = value;
					if ((value != null))
					{
						value.BillInfos.Add(this);
						this._idDrink = value.idDrink;
					}
					else
					{
						this._idDrink = default(int);
					}
					this.SendPropertyChanged("Drink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoriesD")]
	public partial class CategoriesD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCategoriesD;
		
		private string _nameCategories;
		
		private EntitySet<Drink> _Drinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCategoriesDChanging(int value);
    partial void OnidCategoriesDChanged();
    partial void OnnameCategoriesChanging(string value);
    partial void OnnameCategoriesChanged();
    #endregion
		
		public CategoriesD()
		{
			this._Drinks = new EntitySet<Drink>(new Action<Drink>(this.attach_Drinks), new Action<Drink>(this.detach_Drinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoriesD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCategoriesD
		{
			get
			{
				return this._idCategoriesD;
			}
			set
			{
				if ((this._idCategoriesD != value))
				{
					this.OnidCategoriesDChanging(value);
					this.SendPropertyChanging();
					this._idCategoriesD = value;
					this.SendPropertyChanged("idCategoriesD");
					this.OnidCategoriesDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameCategories", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nameCategories
		{
			get
			{
				return this._nameCategories;
			}
			set
			{
				if ((this._nameCategories != value))
				{
					this.OnnameCategoriesChanging(value);
					this.SendPropertyChanging();
					this._nameCategories = value;
					this.SendPropertyChanged("nameCategories");
					this.OnnameCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriesD_Drink", Storage="_Drinks", ThisKey="idCategoriesD", OtherKey="idCategoriesD")]
		public EntitySet<Drink> Drinks
		{
			get
			{
				return this._Drinks;
			}
			set
			{
				this._Drinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.CategoriesD = this;
		}
		
		private void detach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.CategoriesD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cateNhanvien")]
	public partial class cateNhanvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCateNV;
		
		private string _cateNhanVien1;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCateNVChanging(int value);
    partial void OnidCateNVChanged();
    partial void OncateNhanVien1Changing(string value);
    partial void OncateNhanVien1Changed();
    #endregion
		
		public cateNhanvien()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCateNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCateNV
		{
			get
			{
				return this._idCateNV;
			}
			set
			{
				if ((this._idCateNV != value))
				{
					this.OnidCateNVChanging(value);
					this.SendPropertyChanging();
					this._idCateNV = value;
					this.SendPropertyChanged("idCateNV");
					this.OnidCateNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cateNhanVien", Storage="_cateNhanVien1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cateNhanVien1
		{
			get
			{
				return this._cateNhanVien1;
			}
			set
			{
				if ((this._cateNhanVien1 != value))
				{
					this.OncateNhanVien1Changing(value);
					this.SendPropertyChanging();
					this._cateNhanVien1 = value;
					this.SendPropertyChanged("cateNhanVien1");
					this.OncateNhanVien1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cateNhanvien_NhanVien", Storage="_NhanViens", ThisKey="idCateNV", OtherKey="idCateNV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.cateNhanvien = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.cateNhanvien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drink")]
	public partial class Drink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDrink;
		
		private string _nameDrink;
		
		private double _price;
		
		private int _idSizeDrink;
		
		private System.Data.Linq.Binary _picture;
		
		private int _idCategoriesD;
		
		private string _MaDrink;
		
		private EntitySet<BillInfo> _BillInfos;
		
		private EntityRef<CategoriesD> _CategoriesD;
		
		private EntityRef<SizeDrink> _SizeDrink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDrinkChanging(int value);
    partial void OnidDrinkChanged();
    partial void OnnameDrinkChanging(string value);
    partial void OnnameDrinkChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnidSizeDrinkChanging(int value);
    partial void OnidSizeDrinkChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    partial void OnidCategoriesDChanging(int value);
    partial void OnidCategoriesDChanged();
    partial void OnMaDrinkChanging(string value);
    partial void OnMaDrinkChanged();
    #endregion
		
		public Drink()
		{
			this._BillInfos = new EntitySet<BillInfo>(new Action<BillInfo>(this.attach_BillInfos), new Action<BillInfo>(this.detach_BillInfos));
			this._CategoriesD = default(EntityRef<CategoriesD>);
			this._SizeDrink = default(EntityRef<SizeDrink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDrink", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDrink
		{
			get
			{
				return this._idDrink;
			}
			set
			{
				if ((this._idDrink != value))
				{
					this.OnidDrinkChanging(value);
					this.SendPropertyChanging();
					this._idDrink = value;
					this.SendPropertyChanged("idDrink");
					this.OnidDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameDrink", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nameDrink
		{
			get
			{
				return this._nameDrink;
			}
			set
			{
				if ((this._nameDrink != value))
				{
					this.OnnameDrinkChanging(value);
					this.SendPropertyChanging();
					this._nameDrink = value;
					this.SendPropertyChanged("nameDrink");
					this.OnnameDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSizeDrink", DbType="Int NOT NULL")]
		public int idSizeDrink
		{
			get
			{
				return this._idSizeDrink;
			}
			set
			{
				if ((this._idSizeDrink != value))
				{
					if (this._SizeDrink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSizeDrinkChanging(value);
					this.SendPropertyChanging();
					this._idSizeDrink = value;
					this.SendPropertyChanged("idSizeDrink");
					this.OnidSizeDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategoriesD", DbType="Int NOT NULL")]
		public int idCategoriesD
		{
			get
			{
				return this._idCategoriesD;
			}
			set
			{
				if ((this._idCategoriesD != value))
				{
					if (this._CategoriesD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCategoriesDChanging(value);
					this.SendPropertyChanging();
					this._idCategoriesD = value;
					this.SendPropertyChanged("idCategoriesD");
					this.OnidCategoriesDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDrink", AutoSync=AutoSync.Always, DbType="NVarChar(17) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaDrink
		{
			get
			{
				return this._MaDrink;
			}
			set
			{
				if ((this._MaDrink != value))
				{
					this.OnMaDrinkChanging(value);
					this.SendPropertyChanging();
					this._MaDrink = value;
					this.SendPropertyChanged("MaDrink");
					this.OnMaDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_BillInfo", Storage="_BillInfos", ThisKey="idDrink", OtherKey="idDrink")]
		public EntitySet<BillInfo> BillInfos
		{
			get
			{
				return this._BillInfos;
			}
			set
			{
				this._BillInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriesD_Drink", Storage="_CategoriesD", ThisKey="idCategoriesD", OtherKey="idCategoriesD", IsForeignKey=true)]
		public CategoriesD CategoriesD
		{
			get
			{
				return this._CategoriesD.Entity;
			}
			set
			{
				CategoriesD previousValue = this._CategoriesD.Entity;
				if (((previousValue != value) 
							|| (this._CategoriesD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoriesD.Entity = null;
						previousValue.Drinks.Remove(this);
					}
					this._CategoriesD.Entity = value;
					if ((value != null))
					{
						value.Drinks.Add(this);
						this._idCategoriesD = value.idCategoriesD;
					}
					else
					{
						this._idCategoriesD = default(int);
					}
					this.SendPropertyChanged("CategoriesD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SizeDrink_Drink", Storage="_SizeDrink", ThisKey="idSizeDrink", OtherKey="idSizeDrink", IsForeignKey=true)]
		public SizeDrink SizeDrink
		{
			get
			{
				return this._SizeDrink.Entity;
			}
			set
			{
				SizeDrink previousValue = this._SizeDrink.Entity;
				if (((previousValue != value) 
							|| (this._SizeDrink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SizeDrink.Entity = null;
						previousValue.Drinks.Remove(this);
					}
					this._SizeDrink.Entity = value;
					if ((value != null))
					{
						value.Drinks.Add(this);
						this._idSizeDrink = value.idSizeDrink;
					}
					else
					{
						this._idSizeDrink = default(int);
					}
					this.SendPropertyChanged("SizeDrink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillInfos(BillInfo entity)
		{
			this.SendPropertyChanging();
			entity.Drink = this;
		}
		
		private void detach_BillInfos(BillInfo entity)
		{
			this.SendPropertyChanging();
			entity.Drink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NgayLuong")]
	public partial class NgayLuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNgayLuong;
		
		private int _idNhanVien;
		
		private System.DateTime _ngay;
		
		private System.Nullable<double> _luongNgay;
		
		private System.Nullable<int> _cateL;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNgayLuongChanging(int value);
    partial void OnidNgayLuongChanged();
    partial void OnidNhanVienChanging(int value);
    partial void OnidNhanVienChanged();
    partial void OnngayChanging(System.DateTime value);
    partial void OnngayChanged();
    partial void OnluongNgayChanging(System.Nullable<double> value);
    partial void OnluongNgayChanged();
    partial void OncateLChanging(System.Nullable<int> value);
    partial void OncateLChanged();
    #endregion
		
		public NgayLuong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNgayLuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNgayLuong
		{
			get
			{
				return this._idNgayLuong;
			}
			set
			{
				if ((this._idNgayLuong != value))
				{
					this.OnidNgayLuongChanging(value);
					this.SendPropertyChanging();
					this._idNgayLuong = value;
					this.SendPropertyChanged("idNgayLuong");
					this.OnidNgayLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="Int NOT NULL")]
		public int idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date NOT NULL")]
		public System.DateTime ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luongNgay", DbType="Float")]
		public System.Nullable<double> luongNgay
		{
			get
			{
				return this._luongNgay;
			}
			set
			{
				if ((this._luongNgay != value))
				{
					this.OnluongNgayChanging(value);
					this.SendPropertyChanging();
					this._luongNgay = value;
					this.SendPropertyChanged("luongNgay");
					this.OnluongNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cateL", DbType="Int")]
		public System.Nullable<int> cateL
		{
			get
			{
				return this._cateL;
			}
			set
			{
				if ((this._cateL != value))
				{
					this.OncateLChanging(value);
					this.SendPropertyChanging();
					this._cateL = value;
					this.SendPropertyChanged("cateL");
					this.OncateLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NgayLuong", Storage="_NhanVien", ThisKey="idNhanVien", OtherKey="idNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.NgayLuongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.NgayLuongs.Add(this);
						this._idNhanVien = value.idNhanVien;
					}
					else
					{
						this._idNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNhanVien;
		
		private string _maNhanVien;
		
		private string _tenNhanVien;
		
		private int _idCateNV;
		
		private System.Nullable<double> _luongUncheck;
		
		private System.Nullable<double> _luongCashout;
		
		private string _MaNV;
		
		private EntitySet<NgayLuong> _NgayLuongs;
		
		private EntityRef<cateNhanvien> _cateNhanvien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNhanVienChanging(int value);
    partial void OnidNhanVienChanged();
    partial void OnmaNhanVienChanging(string value);
    partial void OnmaNhanVienChanged();
    partial void OntenNhanVienChanging(string value);
    partial void OntenNhanVienChanged();
    partial void OnidCateNVChanging(int value);
    partial void OnidCateNVChanged();
    partial void OnluongUncheckChanging(System.Nullable<double> value);
    partial void OnluongUncheckChanged();
    partial void OnluongCashoutChanging(System.Nullable<double> value);
    partial void OnluongCashoutChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public NhanVien()
		{
			this._NgayLuongs = new EntitySet<NgayLuong>(new Action<NgayLuong>(this.attach_NgayLuongs), new Action<NgayLuong>(this.detach_NgayLuongs));
			this._cateNhanvien = default(EntityRef<cateNhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhanVien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenNhanVien
		{
			get
			{
				return this._tenNhanVien;
			}
			set
			{
				if ((this._tenNhanVien != value))
				{
					this.OntenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._tenNhanVien = value;
					this.SendPropertyChanged("tenNhanVien");
					this.OntenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCateNV", DbType="Int NOT NULL")]
		public int idCateNV
		{
			get
			{
				return this._idCateNV;
			}
			set
			{
				if ((this._idCateNV != value))
				{
					if (this._cateNhanvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCateNVChanging(value);
					this.SendPropertyChanging();
					this._idCateNV = value;
					this.SendPropertyChanged("idCateNV");
					this.OnidCateNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luongUncheck", DbType="Float")]
		public System.Nullable<double> luongUncheck
		{
			get
			{
				return this._luongUncheck;
			}
			set
			{
				if ((this._luongUncheck != value))
				{
					this.OnluongUncheckChanging(value);
					this.SendPropertyChanging();
					this._luongUncheck = value;
					this.SendPropertyChanged("luongUncheck");
					this.OnluongUncheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luongCashout", DbType="Float")]
		public System.Nullable<double> luongCashout
		{
			get
			{
				return this._luongCashout;
			}
			set
			{
				if ((this._luongCashout != value))
				{
					this.OnluongCashoutChanging(value);
					this.SendPropertyChanging();
					this._luongCashout = value;
					this.SendPropertyChanged("luongCashout");
					this.OnluongCashoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.Always, DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NgayLuong", Storage="_NgayLuongs", ThisKey="idNhanVien", OtherKey="idNhanVien")]
		public EntitySet<NgayLuong> NgayLuongs
		{
			get
			{
				return this._NgayLuongs;
			}
			set
			{
				this._NgayLuongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cateNhanvien_NhanVien", Storage="_cateNhanvien", ThisKey="idCateNV", OtherKey="idCateNV", IsForeignKey=true)]
		public cateNhanvien cateNhanvien
		{
			get
			{
				return this._cateNhanvien.Entity;
			}
			set
			{
				cateNhanvien previousValue = this._cateNhanvien.Entity;
				if (((previousValue != value) 
							|| (this._cateNhanvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cateNhanvien.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._cateNhanvien.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._idCateNV = value.idCateNV;
					}
					else
					{
						this._idCateNV = default(int);
					}
					this.SendPropertyChanged("cateNhanvien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NgayLuongs(NgayLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_NgayLuongs(NgayLuong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SizeDrink")]
	public partial class SizeDrink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSizeDrink;
		
		private string _nameSizeDrink;
		
		private EntitySet<Drink> _Drinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSizeDrinkChanging(int value);
    partial void OnidSizeDrinkChanged();
    partial void OnnameSizeDrinkChanging(string value);
    partial void OnnameSizeDrinkChanged();
    #endregion
		
		public SizeDrink()
		{
			this._Drinks = new EntitySet<Drink>(new Action<Drink>(this.attach_Drinks), new Action<Drink>(this.detach_Drinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSizeDrink", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSizeDrink
		{
			get
			{
				return this._idSizeDrink;
			}
			set
			{
				if ((this._idSizeDrink != value))
				{
					this.OnidSizeDrinkChanging(value);
					this.SendPropertyChanging();
					this._idSizeDrink = value;
					this.SendPropertyChanged("idSizeDrink");
					this.OnidSizeDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameSizeDrink", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nameSizeDrink
		{
			get
			{
				return this._nameSizeDrink;
			}
			set
			{
				if ((this._nameSizeDrink != value))
				{
					this.OnnameSizeDrinkChanging(value);
					this.SendPropertyChanging();
					this._nameSizeDrink = value;
					this.SendPropertyChanged("nameSizeDrink");
					this.OnnameSizeDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SizeDrink_Drink", Storage="_Drinks", ThisKey="idSizeDrink", OtherKey="idSizeDrink")]
		public EntitySet<Drink> Drinks
		{
			get
			{
				return this._Drinks;
			}
			set
			{
				this._Drinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.SizeDrink = this;
		}
		
		private void detach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.SizeDrink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableD")]
	public partial class TableD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTableD;
		
		private string _nameTable;
		
		private int _numberPeople;
		
		private int _status;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTableDChanging(int value);
    partial void OnidTableDChanged();
    partial void OnnameTableChanging(string value);
    partial void OnnameTableChanged();
    partial void OnnumberPeopleChanging(int value);
    partial void OnnumberPeopleChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    #endregion
		
		public TableD()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTableD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTableD
		{
			get
			{
				return this._idTableD;
			}
			set
			{
				if ((this._idTableD != value))
				{
					this.OnidTableDChanging(value);
					this.SendPropertyChanging();
					this._idTableD = value;
					this.SendPropertyChanged("idTableD");
					this.OnidTableDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTable", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nameTable
		{
			get
			{
				return this._nameTable;
			}
			set
			{
				if ((this._nameTable != value))
				{
					this.OnnameTableChanging(value);
					this.SendPropertyChanging();
					this._nameTable = value;
					this.SendPropertyChanged("nameTable");
					this.OnnameTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberPeople", DbType="Int NOT NULL")]
		public int numberPeople
		{
			get
			{
				return this._numberPeople;
			}
			set
			{
				if ((this._numberPeople != value))
				{
					this.OnnumberPeopleChanging(value);
					this.SendPropertyChanging();
					this._numberPeople = value;
					this.SendPropertyChanged("numberPeople");
					this.OnnumberPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TableD_Bill", Storage="_Bills", ThisKey="idTableD", OtherKey="idTableD")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableD = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.TableD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idThanhToan;
		
		private int _idNhanVien;
		
		private System.Nullable<System.DateTime> _dateCheckout;
		
		private double _luongCheckout;
		
		private string _MaTT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThanhToanChanging(int value);
    partial void OnidThanhToanChanged();
    partial void OnidNhanVienChanging(int value);
    partial void OnidNhanVienChanged();
    partial void OndateCheckoutChanging(System.Nullable<System.DateTime> value);
    partial void OndateCheckoutChanged();
    partial void OnluongCheckoutChanging(double value);
    partial void OnluongCheckoutChanged();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    #endregion
		
		public ThanhToan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThanhToan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idThanhToan
		{
			get
			{
				return this._idThanhToan;
			}
			set
			{
				if ((this._idThanhToan != value))
				{
					this.OnidThanhToanChanging(value);
					this.SendPropertyChanging();
					this._idThanhToan = value;
					this.SendPropertyChanged("idThanhToan");
					this.OnidThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="Int NOT NULL")]
		public int idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCheckout", DbType="Date")]
		public System.Nullable<System.DateTime> dateCheckout
		{
			get
			{
				return this._dateCheckout;
			}
			set
			{
				if ((this._dateCheckout != value))
				{
					this.OndateCheckoutChanging(value);
					this.SendPropertyChanging();
					this._dateCheckout = value;
					this.SendPropertyChanged("dateCheckout");
					this.OndateCheckoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luongCheckout", DbType="Float NOT NULL")]
		public double luongCheckout
		{
			get
			{
				return this._luongCheckout;
			}
			set
			{
				if ((this._luongCheckout != value))
				{
					this.OnluongCheckoutChanging(value);
					this.SendPropertyChanging();
					this._luongCheckout = value;
					this.SendPropertyChanged("luongCheckout");
					this.OnluongCheckoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", AutoSync=AutoSync.Always, DbType="NVarChar(36) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class USP_CheckLoginResult
	{
		
		private string _userName;
		
		private string _displayName;
		
		private string _password;
		
		private int _idTypeAccount;
		
		public USP_CheckLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this._displayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTypeAccount", DbType="Int NOT NULL")]
		public int idTypeAccount
		{
			get
			{
				return this._idTypeAccount;
			}
			set
			{
				if ((this._idTypeAccount != value))
				{
					this._idTypeAccount = value;
				}
			}
		}

        public static USP_CheckLoginResult Success { get; set; }

        public static USP_CheckLoginResult Disabled { get; set; }

        public static USP_CheckLoginResult Invalid { get; set; }
    }
}
#pragma warning restore 1591
